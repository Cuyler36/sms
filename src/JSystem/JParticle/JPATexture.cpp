#include <JSystem/JParticle/JPATexture.hpp>
#include <dolphin/gx/GXTexture.h>
#include <dolphin/os/OSCache.h>

JPATexture::JPATexture(const u8* data, JKRHeap* heap)
    : JPADataBlock(data, heap)
    , unk8((ResTIMG*)((u8*)unk4 + 0x20), 0)
{
}

void JPADefaultTexture::initialize(JKRHeap* heap)
{
	unk0 = (u8*)JKRHeap::alloc(0x80, 0x20, heap);

	// TODO: huh? why no array?
	unk0[0x0]  = 0;
	unk0[0x1]  = 0xff;
	unk0[0x2]  = 0;
	unk0[0x3]  = 0xff;
	unk0[0x4]  = 0;
	unk0[0x5]  = 0xff;
	unk0[0x6]  = 0;
	unk0[0x7]  = 0xff;
	unk0[0x8]  = 0;
	unk0[0x9]  = 0xff;
	unk0[0xa]  = 0x1a;
	unk0[0xb]  = 0xff;
	unk0[0xc]  = 0x80;
	unk0[0xd]  = 0xff;
	unk0[0xe]  = 0xd6;
	unk0[0xf]  = 0xff;
	unk0[0x10] = 0;
	unk0[0x11] = 0xff;
	unk0[0x12] = 0x80;
	unk0[0x13] = 0xff;
	unk0[0x14] = 0xff;
	unk0[0x15] = 0xff;
	unk0[0x16] = 0xff;
	unk0[0x17] = 0xff;
	unk0[0x18] = 0;
	unk0[0x19] = 0xff;
	unk0[0x1a] = 0xd6;
	unk0[0x1b] = 0xff;
	unk0[0x1c] = 0xff;
	unk0[0x1d] = 0xff;
	unk0[0x1e] = 0xff;
	unk0[0x1f] = 0xff;
	unk0[0x20] = 0;
	unk0[0x21] = 0xff;
	unk0[0x22] = 0;
	unk0[0x23] = 0xff;
	unk0[0x24] = 0;
	unk0[0x25] = 0xff;
	unk0[0x26] = 0;
	unk0[0x27] = 0xff;
	unk0[0x28] = 0xd6;
	unk0[0x29] = 0xff;
	unk0[0x2a] = 0x80;
	unk0[0x2b] = 0xff;
	unk0[0x2c] = 0x1a;
	unk0[0x2d] = 0xff;
	unk0[0x2e] = 0;
	unk0[0x2f] = 0xff;
	unk0[0x30] = 0xff;
	unk0[0x31] = 0xff;
	unk0[0x32] = 0xff;
	unk0[0x33] = 0xff;
	unk0[0x34] = 0x80;
	unk0[0x35] = 0xff;
	unk0[0x36] = 0;
	unk0[0x37] = 0xff;
	unk0[0x38] = 0xff;
	unk0[0x39] = 0xff;
	unk0[0x3a] = 0xff;
	unk0[0x3b] = 0xff;
	unk0[0x3c] = 0xd6;
	unk0[0x3d] = 0xff;
	unk0[0x3e] = 0;
	unk0[0x3f] = 0xff;
	unk0[0x40] = 0;
	unk0[0x41] = 0xff;
	unk0[0x42] = 0xd6;
	unk0[0x43] = 0xff;
	unk0[0x44] = 0xff;
	unk0[0x45] = 0xff;
	unk0[0x46] = 0xff;
	unk0[0x47] = 0xff;
	unk0[0x48] = 0;
	unk0[0x49] = 0xff;
	unk0[0x4a] = 0x80;
	unk0[0x4b] = 0xff;
	unk0[0x4c] = 0xff;
	unk0[0x4d] = 0xff;
	unk0[0x4e] = 0xff;
	unk0[0x4f] = 0xff;
	unk0[0x50] = 0;
	unk0[0x51] = 0xff;
	unk0[0x52] = 0x1a;
	unk0[0x53] = 0xff;
	unk0[0x54] = 0x80;
	unk0[0x55] = 0xff;
	unk0[0x56] = 0xd6;
	unk0[0x57] = 0xff;
	unk0[0x58] = 0;
	unk0[0x59] = 0xff;
	unk0[0x5a] = 0;
	unk0[0x5b] = 0xff;
	unk0[0x5c] = 0;
	unk0[0x5d] = 0xff;
	unk0[0x5e] = 0;
	unk0[0x5f] = 0xff;
	unk0[0x60] = 0xff;
	unk0[0x61] = 0xff;
	unk0[0x62] = 0xff;
	unk0[0x63] = 0xff;
	unk0[0x64] = 0xd6;
	unk0[0x65] = 0xff;
	unk0[0x66] = 0;
	unk0[0x67] = 0xff;
	unk0[0x68] = 0xff;
	unk0[0x69] = 0xff;
	unk0[0x6a] = 0xff;
	unk0[0x6b] = 0xff;
	unk0[0x6c] = 0x80;
	unk0[0x6d] = 0xff;
	unk0[0x6e] = 0;
	unk0[0x6f] = 0xff;
	unk0[0x70] = 0xd6;
	unk0[0x71] = 0xff;
	unk0[0x72] = 0x80;
	unk0[0x73] = 0xff;
	unk0[0x74] = 0x1a;
	unk0[0x75] = 0xff;
	unk0[0x76] = 0;
	unk0[0x77] = 0xff;
	unk0[0x78] = 0;
	unk0[0x79] = 0xff;
	unk0[0x7a] = 0;
	unk0[0x7b] = 0xff;
	unk0[0x7c] = 0;
	unk0[0x7d] = 0xff;
	unk0[0x7e] = 0;
	unk0[0x7f] = 0xff;
	DCStoreRange(unk0, 0x80);
	GXInitTexObj(&unk4, unk0, 8, 8, GX_TF_IA8, GX_REPEAT, GX_REPEAT, 0);
	GXInitTexObjLOD(&unk4, GX_LINEAR, GX_LINEAR, 0.0, 0.0, 0.0, 0, 0,
	                GX_ANISO_1);
}
